{"version":3,"sources":["components/Profile.js","components/Post.js","components/Posts.js","components/AddPost.js","image/close.svg","redux/types.js","components/posts123.js","components/PopupEditor.js","redux/actions.js","components/PopupAddPost.js","components/ServerPost.js","components/Main.js","redux/postReducer.js","redux/profileReducer.js","redux/rootReducer.js","index.js"],"names":["Profile","props","state","openEditor","className","style","backgroundImage","this","profileInfo","urlAvatar","nameUser","userID","onClick","React","Component","connect","profile","Post","post","owner","idOwnerPost","avatarOwner","ownerPost","src","link","alt","event","document","querySelector","classList","toggle","likes","length","text","syncPost","posts","map","item","index","AddPost","openAddPoster","CREATE_POST","SERVER_POSTS","NEW_INFO","postsArr","user","textPost","PopupEditor","handleUserData","bind","handleSubmit","setState","target","name","value","preventDefault","setProfileInfo","isOpen","isClose","close","onSubmit","onChange","type","autoComplete","pattern","placeholder","required","errMsg","maxLength","minLength","mapDispatchToProps","payload","PopupAddPost","createPost","ServerPosts","dispatch","useDispatch","serverPost","useSelector","Main","useState","isEditProfilePopupOpen","setisEditProfilePopupOpen","isAddPostPopupOpen","setisAddPostPopupOpen","closeAllPopups","initialState","rootReducer","combineReducers","action","console","log","concat","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render"],"mappings":"gXAIMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAETC,WAAYF,EAAME,YAJP,E,qDAWf,OACI,0BAASC,UAAU,gBAAnB,UACI,qBAAKA,UAAU,yBAAyBC,MAAO,CAACC,gBAAgB,OAAD,OAASC,KAAKN,MAAMO,YAAYC,UAAhC,QAC/D,mBAAGL,UAAU,gBAAb,SAA8BG,KAAKN,MAAMO,YAAYE,WACrD,mBAAGN,UAAU,cAAb,SAA4BG,KAAKN,MAAMO,YAAYG,SACnD,wBAAQP,UAAU,iCAAlB,qBACA,wBAAQQ,QAASL,KAAKL,MAAMC,WAAYC,UAAU,8BAAlD,yB,GAlBMS,IAAMC,WA+BbC,eANS,SAACb,GACrB,MAAO,CACHM,YAAaN,EAAMc,QAAQA,WAIK,KAAzBD,CAA+Bf,G,MCH/BiB,MA7Bf,YAA2B,IAAVC,EAAS,EAATA,KAQb,OACI,sBAAKd,UAAU,OAAOe,MAAK,UAAKD,EAAKE,aAArC,UACI,sBAAKhB,UAAU,eAAf,UACI,qBAAKA,UAAU,kBAAkBC,MAAO,CAAEC,gBAAgB,OAAD,OAASY,EAAKG,YAAd,QACzD,mBAAGjB,UAAU,eAAb,SAA6Bc,EAAKI,YAClC,mBAAGlB,UAAU,aAAb,oBAGJ,qBAAKmB,IAAG,UAAKL,EAAKM,MAAQpB,UAAU,YAAYqB,IAAI,KACpD,sBAAKrB,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,wBAAQA,UAAU,aAAaQ,QAjB/C,SAAgBc,GACZC,SAASC,cAAc,eAAeC,UAAUC,OAAO,uBAiB3C,mBAAG1B,UAAU,iBAAb,SAA+Bc,EAAKa,MAAMC,YAE9C,wBAAQ5B,UAAU,cAAlB,sBAEJ,mBAAGA,UAAU,aAAb,SAA2Bc,EAAKe,WChB5C,IAMelB,eANS,SAACb,GACrB,MAAO,CACHgC,SAAUhC,EAAMiC,MAAMA,SAIU,KAAzBpB,EAbf,YACI,OADyB,EAAZmB,SACGE,KAAI,SAACC,EAAMC,GAEvB,OAAO,cAAC,EAAD,CAA2BpB,KAAMmB,GAAtBC,EAAQ,cCcnBC,G,wDAjBX,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTsC,cAAevC,EAAMuC,eAHV,E,qDASf,OACI,qBAAKpC,UAAU,WAAf,SACI,wBAAQQ,QAASL,KAAKL,MAAMsC,cAAepC,UAAU,yBAArD,4B,GAZMS,IAAMC,Y,eCHb,G,MAAA,IAA0B,mCCA5B2B,EAAc,mBACdC,EAAe,mBACfC,EAAW,mBCwDTC,EA1DE,CACb,CACItB,UAAW,SACXD,YAAa,yEACbG,KAAM,wEACNS,KAAM,6DACNb,YAAa,WACbW,MAAO,CACH,CAACc,KAAM,YACP,CAACA,KAAM,YACP,CAACA,KAAM,YACP,CAACA,KAAM,cAGf,CACIvB,UAAW,SACXD,YAAa,wEACbG,KAAM,4EACNS,KAAM,6DACNb,YAAa,SACbW,MAAO,CACH,CAACc,KAAM,YAGf,CACIvB,UAAW,MACXD,YAAa,sEACbG,KAAM,wEACNS,KAAM,6DACNb,YAAa,WACbW,MAAO,IAGX,CACIT,UAAW,OACXD,YAAa,sEACbG,KAAM,wEACNsB,SAAU,6DACV1B,YAAa,aACbW,MAAO,CACH,CAACc,KAAM,YACP,CAACA,KAAM,YACP,CAACA,KAAM,gBAGf,CACIvB,UAAW,OACXD,YAAa,0EACbG,KAAM,yEACNS,KAAM,6DACNb,YAAa,WACbW,MAAO,CACH,CAACc,KAAM,cACP,CAACA,KAAM,e,IC/CbE,E,kDACF,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTO,UAAW,EAAKR,MAAMO,YAAYC,UAClCC,SAAU,EAAKT,MAAMO,YAAYE,SACjCC,OAAQ,EAAKV,MAAMO,YAAYG,QAEnC,EAAKqC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARL,E,2DAWJvB,GACXnB,KAAK4C,SAAL,eACKzB,EAAM0B,OAAOC,KAAO3B,EAAM0B,OAAOE,U,mCAI7B5B,GACTA,EAAM6B,iBADU,MAEwBhD,KAAKL,MAArCO,EAFQ,EAERA,UAAWC,EAFH,EAEGA,SAAUC,EAFb,EAEaA,OAC7BJ,KAAKN,MAAMuD,eAAe,CACtB/C,YACAC,WACAC,a,+BAMJ,OACI,qBAAKP,UAAS,qBAAgBG,KAAKN,MAAMwD,QAAU,mBAAnD,SACI,sBAAKrD,UAAU,sBAAf,UACI,qBAAKQ,QAASL,KAAKN,MAAMyD,QAASnC,IAAKoC,EAAOlC,IAAI,GAAGrB,UAAU,sBAC/D,oBAAIA,UAAU,oBAAd,uIACA,uBAAMwD,SAAUrD,KAAK2C,aAAc9C,UAAU,mBAAmBiD,KAAK,UAArE,UACI,gCACI,uBAAOC,MAAO/C,KAAKL,MAAMO,UAAWoD,SAAUtD,KAAKyC,eAAgBc,KAAK,OAAOC,aAAa,MAAMV,KAAK,YACnGW,QAAQ,uCACR5D,UAAU,kDAAkD6D,YAAY,yFAAmBC,UAAQ,IACvG,qBAAK9D,UAAU,QAAf,SAAwBG,KAAKL,MAAMiE,YAEvC,gCACI,uBAAOb,MAAO/C,KAAKL,MAAMQ,SAAUmD,SAAUtD,KAAKyC,eAAgBc,KAAK,OAAOC,aAAa,MAAMV,KAAK,WAAWjD,UAAU,gDACvH6D,YAAY,qBAAMC,UAAQ,EAACE,UAAU,KAAKC,UAAU,MACxD,qBAAKjE,UAAU,QAAf,SAAwBG,KAAKL,MAAMiE,YAEvC,gCACI,uBAAOb,MAAO/C,KAAKL,MAAMS,OAAQkD,SAAUtD,KAAKyC,eAAgBc,KAAK,OAAOC,aAAa,MAAMV,KAAK,SAChGjD,UAAU,sDAAsD6D,YAAY,kEAAgBC,UAAQ,EAACE,UAAU,KAC/GC,UAAU,MACd,qBAAKjE,UAAU,QAAf,SAAwBG,KAAKL,MAAMiE,YAEvC,wBAAQ/D,UAAU,4BAAlB,gF,GArDES,IAAMC,WA6D1BwD,EAAqB,CACvBd,eC1DG,SAAwBxC,GAC3B,MAAO,CACH8C,KAAMnB,EACN4B,QAASvD,KDgEFD,eANS,SAACb,GACrB,MAAO,CACHM,YAAaN,EAAMc,QAAQA,WAIKsD,EAAzBvD,CAA6CgC,GEvEtDyB,G,wDACF,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToB,UAAW,OACXF,YAAa,SACbC,YAAa,uEACbG,KAAM,GACNS,KAAM,IAEV,EAAKiB,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKD,eAAiB,EAAKA,eAAeC,KAApB,gBAVP,E,yDAaNvB,GACTA,EAAM6B,iBACNhD,KAAKN,MAAMwE,WAAWlE,KAAKL,OAC3BK,KAAK4C,SAAS,CACV3B,KAAM,GACNS,KAAM,KAEV1B,KAAKN,MAAMyD,Y,qCAGAhC,GACXnB,KAAK4C,SAAL,eACKzB,EAAM0B,OAAOC,KAAO3B,EAAM0B,OAAOE,U,+BAKtC,OACI,qBAAKlD,UAAS,qBAAgBG,KAAKN,MAAMwD,QAAU,mBAAnD,SACI,sBAAKrD,UAAU,iBAAf,UACI,qBAAKQ,QAASL,KAAKN,MAAMyD,QAASnC,IAAKoC,EAAOlC,IAAI,GAAGrB,UAAU,iBAC/D,oBAAIA,UAAU,eAAd,qEACA,uBAAMwD,SAAUrD,KAAK2C,aAAc9C,UAAU,cAAciD,KAAK,MAAhE,UACI,gCACI,uBAAOC,MAAO/C,KAAKL,MAAMsB,KAAMqC,SAAUtD,KAAKyC,eAAgBc,KAAK,MAAME,QAAQ,uCAAkCD,aAAa,MAAMV,KAAK,OACvIjD,UAAU,0CAA0C6D,YAAY,qGAAqBC,UAAQ,IACjG,qBAAK9D,UAAU,aAEnB,gCACI,uBAAOkD,MAAO/C,KAAKL,MAAM+B,KAAM4B,SAAUtD,KAAKyC,eAAgBc,KAAK,OAAOC,aAAa,MAAMV,KAAK,OAAOjD,UAAU,sCAC/G6D,YAAY,sGAAsBC,UAAQ,EAACE,UAAU,KAAKC,UAAU,MACxE,qBAAKjE,UAAU,aAGnB,wBAAQA,UAAU,uBAAlB,2B,GAhDGS,IAAMC,YAwD3BwD,EAAqB,CACvBG,WD5DG,SAAoBvD,GACvB,MAAO,CACH4C,KAAMrB,EACN8B,QAASrD,KC6DFH,cAAQ,KAAMuD,EAAdvD,CAAkCyD,GC9DlC,SAASE,IACpB,IAAMC,EAAWC,cACXC,EAAaC,aAAY,SAAA5E,GAAK,OAAIA,EAAMiC,MAAM0C,cAGpD,OAFAF,EFYQ,CACJb,KAAMpB,EACN6B,QAAS3B,IEZRiC,EACEA,EAAWzC,KAAI,SAACC,EAAMC,GACzB,OAAO,cAAC,EAAD,CAA2BpB,KAAMmB,GAAtBC,EAAQ,WAFJ,6BC+CfyC,MAhDf,WAAgB,MAG8ClE,IAAMmE,UAAS,GAH7D,mBAGPC,EAHO,KAGiBC,EAHjB,OAIsCrE,IAAMmE,UAAS,GAJrD,mBAIPG,EAJO,KAIaC,EAJb,KAmBd,SAASC,IACPH,GAA0B,GAC1BE,GAAsB,GAIxB,OACE,gCACE,uBAAMhF,UAAU,OAAhB,UAEE,cAAC,EAAD,CAASD,WAtBf,WACE+E,GAA2BD,MAsBvB,sBAAK7E,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,CAASoC,cAvBf,WACE4C,GAAuBD,SAwBrB,0BAAS/E,UAAU,SAAnB,UAEE,cAAC,EAAD,CACEqD,OAAQwB,EACRvB,QAAS2B,IAEX,cAAC,EAAD,CAAc5B,OAAQ0B,EAAoBzB,QAAS2B,W,cC/CrDC,EAAe,CACjBnD,MAAO,GACP0C,WAAY,ICFVS,EAAe,CACjBtE,QAAS,CACLP,UAAW,GACXC,SAAU,GACVC,OAAQ,KCJH4E,EAAcC,YAAgB,CACvCrD,MFIwB,WAAmC,IAAlCjC,EAAiC,uDAAzBoF,EAAcG,EAAW,uCAE1D,OADAC,QAAQC,IAAIzF,EAAMiC,OACVsD,EAAO3B,MACX,KAAKrB,EAED,OAAO,2BAAKvC,GAAZ,IAAmBiC,MAAOjC,EAAMiC,MAAMyD,OAAO,CAACH,EAAOlB,YACzD,KAAK7B,EACD,OAAO,2BAAKxC,GAAZ,IAAmB2E,WAAYY,EAAOlB,UAC1C,QACI,OAAOrE,IEZfc,QDM0B,WAAmC,IAAlCd,EAAiC,uDAAzBoF,EAAcG,EAAW,uCAC5D,OAAQA,EAAO3B,MACX,KAAKnB,EAED,OAAO,2BAAKzC,GAAZ,IAAmBc,QAASyE,EAAOlB,UACvC,QACI,OAAOrE,METb2F,EAAQC,YAAYP,EAAaQ,OAAOC,8BAAgCD,OAAOC,gCAC/EC,EACJ,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGJK,IAASC,OACPF,EACAtE,SAASC,cAAc,W","file":"static/js/main.f373e44a.chunk.js","sourcesContent":["import '../style/Profile.css'\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // тут к нам приходит функция, которая устанавливает состояние для попапа-редактора профиля\n            openEditor: props.openEditor,\n        }\n    }\n\n    \n    render() {\n        //console.log('Не должно быть')\n        return (\n            <section className='block_profile'>\n                <div className='profile__img_container' style={{backgroundImage: `url(${this.props.profileInfo.urlAvatar})`}} ></div>\n                <p className='profile__name'>{this.props.profileInfo.nameUser}</p>\n                <p className='profile__id'>{this.props.profileInfo.userID}</p>\n                <button className='button profile__button_message'>Message</button>\n                <button onClick={this.state.openEditor} className='button profile__button_edit'>Edit</button>\n            </section>\n        )\n    }\n}\n\n// сохраняем определенное состояние для компонента, только то, которое нужно. Берем состояние из редюсера posts\nconst mapStateToProps = (state) => {\n    return {\n        profileInfo: state.profile.profile,\n    };\n};\n\nexport default connect(mapStateToProps, null)(Profile);","import '../style/Post.css';\nimport React from 'react';\n\nfunction Post( { post } ) {\n\n    function isLike(event) {\n        document.querySelector('.post__like').classList.toggle('post__like_liked');\n        // это для будущего, чтобы снимать лайк и передавать на сервер нужный id\n        //event.target.closest(\".post\").getAttribute(\"owner\");\n    }    \n    \n    return (\n        <div className='post' owner={`${post.idOwnerPost}`}>\n            <div className='post__header'>\n                <div className='post__img_autor' style={{ backgroundImage: `url(${post.avatarOwner})` }}></div>\n                <p className='post__img_id'>{post.ownerPost}</p>\n                <i className='post__menu'>...</i>\n            </div>\n\n            <img src={`${post.link}`} className='post__img' alt='' />\n            <div className='post__buttons'>\n                <div className='like-container'>\n                    <button className='post__like' onClick={isLike}></button>\n                    <p className='post__like-sum'>{post.likes.length}</p>\n                </div>\n                <button className='post__share'>Share</button>\n            </div>\n            <p className='post__test'>{post.text}</p>\n        </div>\n    );\n}\n\nexport default Post","import React from 'react';\nimport Post from './Post';\nimport { connect } from 'react-redux';\n\nfunction Posts({ syncPost }) {\n    return syncPost.map((item, index) => {\n        //return document.querySelector('.posts-place').insertAdjacentHTML('afterbegin', <Post key={index + ' qwe'} post={item} />)\n        return <Post key={index + ' qwe'} post={item} />\n    });\n};\n// сохраняем определенное состояние для компонента, только то, которое нужно. Берем состояние из редюсера posts\nconst mapStateToProps = (state) => {\n    return {\n        syncPost: state.posts.posts,\n    };\n};\n\nexport default connect(mapStateToProps, null)(Posts);","import '../style/AddPost.css'\nimport React from 'react';\n\nclass AddPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openAddPoster: props.openAddPoster\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='add-post'>\n                <button onClick={this.state.openAddPoster} className='button add-post_button'>Add post</button>\n            </div>\n        )\n    }\n}\n\nexport default AddPost","export default __webpack_public_path__ + \"static/media/close.888d78eb.svg\";","export const CREATE_POST = 'POST/CREATE_POST';\nexport const SERVER_POSTS = 'POST/SERVER_POST';\nexport const NEW_INFO = 'PROFILE/NEW_INFO';\n// export const HIDE_LOADER = 'APP/HIDE_LOADER';\n// export const SHOW_ALERT = 'APP/ALERT_LOADER';\n// export const HIDE_ALERT = 'APP/ALERT_LOADER';","const postsArr = [\n    {\n        ownerPost: 'Sergey',\n        avatarOwner: 'https://cdn.pixabay.com/photo/2020/11/26/07/43/wapiti-5778159__340.jpg',\n        link: 'https://cdn.pixabay.com/photo/2020/11/15/17/25/trees-5746604__340.jpg',\n        text: 'I have no special talents. I am only passionately curious.',\n        idOwnerPost: '09090909',\n        likes: [\n            {user: '09090909'},\n            {user: '09090909'},\n            {user: '09090909'},\n            {user: '09090909'},\n        ]\n    },\n    {\n        ownerPost: 'Andrey',\n        avatarOwner: 'https://cdn.pixabay.com/photo/2020/09/13/18/03/geese-5568976__340.jpg',\n        link: 'https://cdn.pixabay.com/photo/2020/11/26/07/22/mountains-5778105__340.jpg',\n        text: 'I have no special talents. I am only passionately curious.',\n        idOwnerPost: '121212',\n        likes: [\n            {user: '121212'},\n        ]\n    },\n    {\n        ownerPost: 'Max',\n        avatarOwner: 'https://cdn.pixabay.com/photo/2020/11/24/18/19/cat-5773481__340.jpg',\n        link: 'https://cdn.pixabay.com/photo/2021/03/04/15/29/river-6068374__340.jpg',\n        text: 'I have no special talents. I am only passionately curious.',\n        idOwnerPost: '23232323',\n        likes: [\n        ]\n    },\n    {\n        ownerPost: 'Vary',\n        avatarOwner: 'https://cdn.pixabay.com/photo/2020/11/26/11/48/cat-5778777__340.jpg',\n        link: 'https://cdn.pixabay.com/photo/2021/03/04/15/29/river-6068374__340.jpg',\n        textPost: 'I have no special talents. I am only passionately curious.',\n        idOwnerPost: '3434343434',\n        likes: [\n            {user: '09090909'},\n            {user: '23232323'},\n            {user: '3434343434'},\n        ]\n    }, \n    {\n        ownerPost: 'Mary',\n        avatarOwner: 'https://cdn.pixabay.com/photo/2021/02/24/09/51/magical-6046019__340.jpg',\n        link: 'https://cdn.pixabay.com/photo/2020/11/05/20/16/horses-5716127__340.jpg',\n        text: 'I have no special talents. I am only passionately curious.',\n        idOwnerPost: '45454545',\n        likes: [\n            {user: '3434343434'},\n            {user: '45454545'},\n        ]\n    }\n]\n\nexport default postsArr","import '../style/Popupeditor.css';\nimport close from '../image/close.svg';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setProfileInfo } from '../redux/actions';\n\nclass PopupEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlAvatar: this.props.profileInfo.urlAvatar,\n            nameUser: this.props.profileInfo.nameUser,\n            userID: this.props.profileInfo.userID,\n        }\n        this.handleUserData = this.handleUserData.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleUserData(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        const { urlAvatar, nameUser, userID } = this.state;\n        this.props.setProfileInfo({\n            urlAvatar,\n            nameUser,\n            userID\n        })\n        // this.props.isClose();\n    }\n\n    render() {\n        return (\n            <div className={`popup-edit ${this.props.isOpen && 'popup_is-opened'}`}>\n                <div className=\"popup-edit__content\">\n                    <img onClick={this.props.isClose} src={close} alt=\"\" className=\"popup-edit__close\" />\n                    <h3 className=\"popup-edit__title\">Редактировать профиль</h3>\n                    <form onSubmit={this.handleSubmit} className=\"popup-edit__form\" name=\"newEdit\">\n                        <div>\n                            <input value={this.state.urlAvatar} onChange={this.handleUserData} type=\"text\" autoComplete=\"off\" name=\"urlAvatar\"\n                                pattern=\"^(http|https):\\/\\/\\w*.\\w*.\\w*.+\"\n                                className=\"popup-edit__input popup-avatar__input_type_name\" placeholder=\"Ссылка на аватар\" required />\n                            <div className=\"error\">{this.state.errMsg}</div>\n                        </div>\n                        <div>\n                            <input value={this.state.nameUser} onChange={this.handleUserData} type=\"text\" autoComplete=\"off\" name=\"nameUser\" className=\"popup-edit__input popup-edit__input_type_name\"\n                                placeholder=\"Имя\" required maxLength=\"30\" minLength=\"2\" />\n                            <div className=\"error\">{this.state.errMsg}</div>\n                        </div>\n                        <div>\n                            <input value={this.state.userID} onChange={this.handleUserData} type=\"text\" autoComplete=\"off\" name=\"userID\"\n                                className=\"popup-edit__input popup-edit__input_type_about-self\" placeholder=\"придумайте ID\" required maxLength=\"30\"\n                                minLength=\"2\" />\n                            <div className=\"error\">{this.state.errMsg}</div>\n                        </div>\n                        <button className=\"button popup-edit__button\">Сохранить</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n// теперь в props есть функция устанавливающая новую информацию в хранилище\nconst mapDispatchToProps = {\n    setProfileInfo,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        profileInfo: state.profile.profile,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupEditor);","import { CREATE_POST, SERVER_POSTS, NEW_INFO } from \"./types\";\nimport postsArr from '../components/posts123';\n//создаем посты\nexport function createPost(post) {\n    return {\n        type: CREATE_POST, // указываем тип события\n        payload: post // тут сохраняем пришедший пост\n    }\n};\n\nexport function setProfileInfo(profile) {\n    return {\n        type: NEW_INFO, // указываем тип события\n        payload: profile // тут сохраняем пришедший пост\n    }\n};\n\n// посты загружаемые с @сервера@\nexport function fetchPosts() {\n    // имитируем загрузку с сервера\n    return ({\n        type: SERVER_POSTS,\n        payload: postsArr\n    })\n}","import '../style/popupAddPost.css';\nimport close from '../image/close.svg';\nimport { createPost } from '../redux/actions';\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nclass PopupAddPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownerPost: 'Lulu',\n            idOwnerPost: '654321',\n            avatarOwner: 'https://cdn.pixabay.com/photo/2021/03/14/10/13/girl-6093779__340.jpg',\n            link: '',\n            text: ''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleUserData = this.handleUserData.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.createPost(this.state);\n        this.setState({\n            link: '',\n            text: ''\n        });\n        this.props.isClose();\n    }\n\n    handleUserData(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className={`popup-edit ${this.props.isOpen && 'popup_is-opened'}`}>\n                <div className=\"popup__content\">\n                    <img onClick={this.props.isClose} src={close} alt=\"\" className=\"popup__close\" />\n                    <h3 className=\"popup__title\">Новый пост</h3>\n                    <form onSubmit={this.handleSubmit} className=\"popup__form\" name=\"new\">\n                        <div>\n                            <input value={this.state.link} onChange={this.handleUserData} type=\"url\" pattern='^(http|https):\\/\\/\\w*.\\w*.\\w*.+' autoComplete=\"off\" name=\"link\"\n                                className=\"popup__input popup__input_type_link-url\" placeholder=\"Ссылка на картинку\" required />\n                            <div className=\"error\"></div>\n                        </div>\n                        <div>\n                            <input value={this.state.text} onChange={this.handleUserData} type=\"text\" autoComplete=\"off\" name=\"text\" className=\"popup__input popup__input_type_name\"\n                                placeholder=\"Ваш текст для поста\" required maxLength=\"30\" minLength=\"2\" />\n                            <div className=\"error\"></div>\n                        </div>\n\n                        <button className=\"button popup__button\">+</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    createPost,\n};\n\n// соединяем хранище с компоненотом\nexport default connect(null, mapDispatchToProps)(PopupAddPost);","import React from 'react';\nimport Post from './Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../redux/actions';\n\nexport default function ServerPosts() {\n    const dispatch = useDispatch(); // с помощью этого создаем action creater, который принимает action\n    const serverPost = useSelector(state => state.posts.serverPost); //обозначаем, что нужно \"достать\" и хранилища\n    dispatch(fetchPosts()); // вызываем action creater и нужным action\n\n    if (!serverPost) { return(<></>) };\n    return serverPost.map((item, index) => {\n        return <Post key={index + ' qwe'} post={item} />\n    });\n};\n//targetElement.insertAdjacentHTML('afterbegin', );","import '../style/main.css';\nimport Profile from './Profile';\nimport Posts from './Posts';\nimport AddPost from './AddPost';\nimport PopupEditor from './PopupEditor';\nimport PopupAddPost from './PopupAddPost';\nimport React from 'react';\nimport ServerPost from './ServerPost';\n\nfunction Main() {\n\n  // Хук. isEditProfilePopupOpen - состоние, setisEditProfilePopupOpen - функция для изменения состояния\n  const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\n  const [isAddPostPopupOpen, setisAddPostPopupOpen] = React.useState(false);\n\n  // меняет внутреннее состояние на противоположное\n  function handleEditProfileClick() {\n    setisEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPostClick() {\n    setisAddPostPopupOpen(!isAddPostPopupOpen);\n  }\n\n  // function insert () {\n  //   return document.querySelector('.posts-place').insertAdjacentHTML('afterbegin', <Posts />)\n  // }\n\n  function closeAllPopups() {\n    setisEditProfilePopupOpen(false);\n    setisAddPostPopupOpen(false);\n  }\n\n  // console.log(postsArr)\n  return (\n    <div>\n      <main className='main'>\n        {/* передаем функцию, которая будет менять состоние у попапа (другого компонента)  */}\n        <Profile openEditor={handleEditProfileClick} />\n        <div className='posts-place'>\n          <Posts />\n          <ServerPost />\n        </div>\n        <AddPost openAddPoster={handleAddPostClick} />\n      </main>\n      <section className='popups'>\n        {/* попапу передаем текущее состяние и функцию для изменения состояния (закрытия попапа) */}\n        <PopupEditor\n          isOpen={isEditProfilePopupOpen}\n          isClose={closeAllPopups}\n        />\n        <PopupAddPost isOpen={isAddPostPopupOpen} isClose={closeAllPopups} />\n      </section>\n    </div>\n  );\n}\n\nexport default Main;\n","import { CREATE_POST, SERVER_POSTS } from './types';\n// в данном файле в зависимости от типа действия action выполняем ту или иную логику\n\n//задаем начальное состояние для постов\nconst initialState = {\n    posts: [],\n    serverPost: []\n};\n//\nexport const postsReducer = (state = initialState, action) => {\n    console.log(state.posts)\n    switch (action.type) {\n        case CREATE_POST: // новые посты\n            //action.payload - посты. Добавляем посты в массив постов, откуда берем из для отображения\n            return { ...state, posts: state.posts.concat([action.payload]) };\n        case SERVER_POSTS: // загружаемые с сервера\n            return { ...state, serverPost: action.payload };\n        default:\n            return state;\n    }\n};","import { NEW_INFO } from './types';\n// в данном файле в зависимости от типа действия action выполняем ту или иную логику\n\n//задаем начальное состояние для постов\nconst initialState = {\n    profile: {\n        urlAvatar: '',\n        nameUser: '',\n        userID: ''\n    },\n};\n//\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEW_INFO: // новые данные профиля\n            //action.infoProfile - информация о профиле.\n            return { ...state, profile: action.payload };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { postsReducer } from './postReducer';\nimport { profileReducer } from './profileReducer';\n// файл отвечает за то, чтобы все редюсеры были видны\nexport const rootReducer = combineReducers({\n    posts: postsReducer,\n    profile: profileReducer\n});","//главный файл\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './components/Main';\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst app = (\n  <Provider store={store}>\n    <Main />\n  </Provider>\n)\nReactDOM.render(\n  app,\n  document.querySelector('.div')\n);\n"],"sourceRoot":""}